services:

  # Postgres
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mitzy
      POSTGRES_DB: Restaurante
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - backend-network
  
  # Mongo
  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend-network

  # Redis
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped
    networks:
      - backend-network

  # Base de datos para Keycloak
  keycloak-db:
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # Servicio Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - backend-network

  # Servicio API
  api:
    build: .
    environment:
      DB_USER: postgres
      DB_PASSWORD: mitzy
      DB_NAME: Restaurante
      DB_HOST: db
      DB_PORT: 5432
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: reserva-restaurantes
      KEYCLOAK_CLIENT_ID: api-restaurantes
      JWT_SECRET: your_jwt_secret
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    ports:
      - "5000:5000"
    depends_on:
      - db
      - keycloak
      - redis
    networks:
      - backend-network

# Configuración de volúmenes
volumes:
  db-data:
  redis-data:
  mongo-data:
  keycloak-db-data:
  keycloak-data:

# Configuración de red
networks:
  backend-network:
    driver: bridge
